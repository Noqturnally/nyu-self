# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
          - name: Setup Python
 
      - name: Python Actions Collection
  uses: microsoft/action-python@0.2.0
  with:
    # Project root directory.
Default '.'

    root: # optional, default is .
    # pyproject.toml location.
Default pyproject.toml

    toml: # optional, default is pyproject.toml
    # Run Black
Default is false.

    black: # optional
    # Run Bandit
Default is false.

    bandit: # optional
    # Run Pylint
Default is false.

    pylint: # optional
    # Run Pyright
Default is false.

    pyright: # optional
    # Run Flake8
Default is false.

    flake8: # optional
    # Run tests with PyTest
Default is false.

    pytest: # optional
    # Publish to PyPi
Default is false

    pypi_publish: # optional
    # Customize which tests run with Pytest Markers

    args: # optional, default is 
    # PyPi Target. Use this to point to private or test locations.      
Default testpypi

    pypi_repo: # optional, default is pypi
    # Credentials for PyPi

    pypi_password: # optional, default is 
    # Value to append to version in order to produce unique id for PyPi.
Examples include: 
  '-rc {{ github.run_attempt }}'
  '-dev {{ github.run_attempt }}'

    version_suffix: # optional, default is 
    # GITHUB_TOKEN
    github_token: # optional, default is ${{ github.token }}
    # Working directory relative to the root directory.
    workdir: # optional, default is src
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
    reporter: # optional, default is github-pr-check
    # Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
Default is added.

    filter_mode: # optional, default is added
    # Exit code for reviewdog when errors are found [true,false]
Default is `false`.

    fail_on_error: # optional, default is false
    # Additional reviewdog flags
    reviewdog_flags: # optional, default is 
